{"version":3,"sources":["renderer.js","data.json","index.js"],"names":["render","htmlContent","MainView","document","querySelector","innerHTML","module","exports","getThingTemplate","things","Name","Type","sortMyStuff","first","second","parseInt","Rating","data","Spirits","sort","content","i","length","console","log"],"mappings":"ACAAM,MAAM,CAACC,OAAP,GAAiB;AACf,aACU,CAEN;AACE,ACLR,YDKgB,KADV;AAEE,YAAQ,QAFV;AAGE,ACNR,kBDMsB,IAHhB;AAIE,cAAU;AAJZ,GAFM,EAQN;AACE,ADXD,SAASP,GCWA,GDXT,CAAgBC,GCUjB,QDVC,EAEP;ACUQ,ADTJ,MAAMC,MCSM,EDTE,GAAGC,ICOf,IDPuB,CAACC,aAAT,gBAAjB;ACUI,ADTJF,EAAAA,QAAQ,CAACG,OCSS,EDTlB,ECME,CDNmBJ,WAArB;ACUI,ACXR,AFEC,SEFQO,KDWS,WCXlB,CAA0BC,MAA1B,EACA;ADMM,ACLF,GDHQ,EAcN,kBCXYA,MAAM,CAACC,IAArB,gBAA+BD,MAAM,CAACE,IAAtC;ADYI,ACXP,YDWe,KADV;AAEE,YAAQ,UAFV;AAGE,ACXR,SAASC,SDWa,ECXtB,CAAqBC,CDQf,ICRN,EAA4BC,MAA5B,EACA;ADWQ,ACVJ,MAAGC,QDUW,ACVH,CAACF,KAAK,CAACG,MAAP,CAAR,GAAyBD,QAAQ,CAACD,MAAM,CAACE,MAAR,CAApC,EACA;ADKE,ACJE,GDVI,QCUG,CAAC,CAAR;ADZS,ACaZ,CDbL;;ACcI,MAAGD,QAAQ,CAACF,KAAK,CAACG,MAAP,CAAR,GAAyBD,QAAQ,CAACD,MAAM,CAACE,MAAR,CAApC,EACA;AACI,WAAO,CAAP;AACH;;AACD,MAAGD,QAAQ,CAACF,KAAK,CAACG,MAAP,CAAR,IAA0BD,QAAQ,CAACD,MAAM,CAACE,MAAR,CAArC,EACA;AACI,WAAO,CAAP;AACH;AACJ;;AAED,IAAMP,MAAM,GAAGQ,IAAI,CAACC,OAAL,CAAaC,IAAb,CAAkBP,WAAlB,CAAf;AACA,IAAIQ,OAAO,GAAG,EAAd;;AAEA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGZ,MAAM,CAACa,MAAxB,EAAgCD,CAAC,EAAjC,EACA;AACIE,EAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACY,CAAD,CAAlB;AACAD,EAAAA,OAAO,IAAIZ,gBAAgB,CAACC,MAAM,CAACY,CAAD,CAAP,CAA3B;AACH;;AACDD,OAAO,WAAP;AACA,sBAAOA,OAAP","file":"modern-javascript-002-SamGrant98.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export function render(htmlContent)\r\n\r\n{\r\n    const MainView = document.querySelector(`#primaryView`);\r\n    MainView.innerHTML = htmlContent\r\n}","module.exports = {\r\n  \"Spirits\":\r\n            [\r\n\r\n      {\r\n        \"Type\": \"Rum\",\r\n        \"Name\": \"Kraken\",\r\n        \"Percentage\": \"40\",\r\n        \"Rating\": \"10\"\r\n      },\r\n      {\r\n        \"Type\": \"Vodka\",\r\n        \"Name\": \"Absolut\",\r\n        \"Percentage\": \"40\",\r\n        \"Rating\": \"6\"\r\n      },\r\n      {\r\n        \"Type\": \"Gin\",\r\n        \"Name\": \"Flagingo\",\r\n        \"Percentage\": \"30\",\r\n        \"Rating\": \"5\"\r\n      }\r\n  ]\r\n}\r\n;","import {render} from \"./renderer\";\r\nimport * as data from \"./data.json\";\r\n\r\nfunction getThingTemplate(things)\r\n{\r\n    return `<li>${things.Name} - ${things.Type}</li>`;\r\n}\r\n\r\nfunction sortMyStuff(first, second)\r\n{\r\n    if(parseInt(first.Rating) < parseInt(second.Rating))\r\n    {\r\n        return -1;\r\n    }\r\n    if(parseInt(first.Rating) > parseInt(second.Rating))\r\n    {\r\n        return 1;\r\n    }\r\n    if(parseInt(first.Rating) == parseInt(second.Rating))\r\n    {\r\n        return 0;\r\n    }\r\n}\r\n\r\nconst things = data.Spirits.sort(sortMyStuff);\r\nlet content = \"\";\r\n\r\nfor(let i=0; i < things.length; i++)\r\n{\r\n    console.log(things[i]);\r\n    content += getThingTemplate(things[i]);\r\n}\r\ncontent += `</ul>`\r\nrender(content);"]}